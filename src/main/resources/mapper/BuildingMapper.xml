<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.technologygarden.dao.BuildingMapper">
  <resultMap id="BaseResultMap" type="com.technologygarden.entity.Building">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="buildingName" />
    <result column="area" jdbcType="REAL" property="area" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="money" jdbcType="REAL" property="money" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from building
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.technologygarden.entity.Building">
    insert into building (id, name, area, 
      createtime, money)
    values (#{id,jdbcType=INTEGER}, #{buildingName,jdbcType=VARCHAR}, #{area,jdbcType=REAL},
      #{createtime,jdbcType=DATE}, #{money,jdbcType=REAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.technologygarden.entity.Building">
    update building
    set name = #{buildingName,jdbcType=VARCHAR},
      area = #{area,jdbcType=REAL},
      createtime = #{createtime,jdbcType=DATE},
      money = #{money,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, area, createtime, money
    from building
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, area, createtime, money
    from building
  </select>

    <select id="selectByPage" resultMap="BaseResultMap">
     select id, name, area, createtime, money
     from building
    </select>

  <update id="updateBuildingById" parameterType="com.technologygarden.entity.Building">
    update building
    <set>
      <if test="buildingName != null and buildingName != ''">
        building.name = #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        building.area = #{area,jdbcType=FLOAT},
      </if>
      <if test="createtime != null">
        building.createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="money != null">
        building.money = #{money,jdbcType=FLOAT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertBuildingForeach">
    insert into building
    (building.name, building.area, building.createtime, building.money)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      #{item.buildingName,jdbcType=VARCHAR},
      #{item.area,jdbcType=FLOAT},
      #{item.createtime,jdbcType=TIMESTAMP},
      #{item.money,jdbcType=FLOAT}
      )
    </foreach>
  </insert>

  <select id="searchBuildingByName" resultMap="BaseResultMap">
    select *
    from building
    where building.name like concat('%', #{buildingName,jdbcType=VARCHAR}, '%')
  </select>

  <select id="getBuildingById" resultMap="BaseResultMap">
    select *
    from building
    <where>
      <if test="buildingId != null">
        and building.id = #{buildingId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>