<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.technologygarden.dao.RoomCompanyMapper">
  <resultMap id="BaseResultMap" type="com.technologygarden.entity.RoomCompany">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="room" jdbcType="VARCHAR" property="room" />
    <result column="area" jdbcType="REAL" property="area" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="owning_time" jdbcType="REAL" property="owningTime" />
    <result column="building_id" jdbcType="INTEGER" property="buildingId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room_company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.technologygarden.entity.RoomCompany">
    insert into room_company (id, room, area, 
      status, company_id, company_name, 
      owner, owning_time, building_id
      )
    values (#{id,jdbcType=INTEGER}, #{room,jdbcType=VARCHAR}, #{area,jdbcType=REAL}, 
      #{status,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR}, #{owningTime,jdbcType=REAL}, #{buildingId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.technologygarden.entity.RoomCompany">
    update room_company
    set room = #{room,jdbcType=VARCHAR},
      area = #{area,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      owning_time = #{owningTime,jdbcType=REAL},
      building_id = #{buildingId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, room, area, status, company_id, company_name, owner, owning_time, building_id
    from room_company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, room, area, status, company_id, company_name, owner, owning_time, building_id
    from room_company
  </select>

  <select id="selectWithBuildingByPage" resultMap="RoomCompanyWithBuilding">
    select rc.*, b.*
    from room_company rc, building b
    where rc.building_id = b.id
  </select>
  <resultMap id="RoomCompanyWithBuilding" type="com.technologygarden.entity.RoomCompany">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="room" jdbcType="VARCHAR" property="room" />
    <result column="area" jdbcType="REAL" property="area" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="owning_time" jdbcType="REAL" property="owningTime" />
    <result column="building_id" jdbcType="INTEGER" property="buildingId" />
    <association property="building" javaType="com.technologygarden.entity.Building">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="buildingName" />
      <result column="area" jdbcType="REAL" property="area" />
      <result column="createtime" jdbcType="DATE" property="createtime" />
      <result column="money" jdbcType="REAL" property="money" />
    </association>
  </resultMap>

  <update id="updateRoomCompanyDynamic" parameterType="com.technologygarden.entity.RoomCompany">
    update room_company
    <set>
      <if test="room != null and room != ''">
        room = #{room, jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=FLOAT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null and companyName != ''">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="owner != null and owner != ''">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="owningTime != null">
        owning_time = #{owningTime,jdbcType=FLOAT},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertRoomCompanyForeach">
    insert into room_company
    (room, area, status, building_id)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      #{item.room,jdbcType=VARCHAR},
      #{item.area,jdbcType=FLOAT},
      1,
      #{item.buildingId,jdbcType=INTEGER}
      )
    </foreach>
  </insert>

  <select id="searchByPage" resultMap="RoomCompanyWithBuilding">
    select rc.*, b.*
    from room_company rc, building b
    <where>
      and rc.building_id = b.id
      <if test="buildingId != null">
        and rc.building_id = #{buildingId}
      </if>
      <if test="status != null">
        and rc.status = #{status}
      </if>
      <if test="roomName != null and roomName != ''">
        and room like concat('%', #{roomName}, '%')
      </if>
    </where>
  </select>


</mapper>